/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  MarketplaceEntry as PrismaMarketplaceEntry,
} from "@prisma/client";

export class MarketplaceEntryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MarketplaceEntryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.marketplaceEntry.count(args);
  }

  async marketplaceEntries(
    args: Prisma.MarketplaceEntryFindManyArgs
  ): Promise<PrismaMarketplaceEntry[]> {
    return this.prisma.marketplaceEntry.findMany(args);
  }
  async marketplaceEntry(
    args: Prisma.MarketplaceEntryFindUniqueArgs
  ): Promise<PrismaMarketplaceEntry | null> {
    return this.prisma.marketplaceEntry.findUnique(args);
  }
  async createMarketplaceEntry(
    args: Prisma.MarketplaceEntryCreateArgs
  ): Promise<PrismaMarketplaceEntry> {
    return this.prisma.marketplaceEntry.create(args);
  }
  async updateMarketplaceEntry(
    args: Prisma.MarketplaceEntryUpdateArgs
  ): Promise<PrismaMarketplaceEntry> {
    return this.prisma.marketplaceEntry.update(args);
  }
  async deleteMarketplaceEntry(
    args: Prisma.MarketplaceEntryDeleteArgs
  ): Promise<PrismaMarketplaceEntry> {
    return this.prisma.marketplaceEntry.delete(args);
  }
}
